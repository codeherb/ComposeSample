on:
  push: 
    branches:
    - develop
    - release/*
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      BRANCH_NAME: ${{ github.ref }}
      BUILD_NUMBER: Action-${{ github.run_number }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '11'

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Permission
        run: chmod +x ./gradlew
            
      - name: Build 
        id: build
        run: ./gradlew clean -PfromGithubAction=true assembleDebug --no-daemon --stacktrace --scan

      - name: Get version name
        id: get-version-name
        run: |
          echo "version_code=$(jq '.elements[0].versionCode' app/build/outputs/apk/debug/output-metadata.json)" >> $GITHUB_OUTPUT
          echo "version_name=$(jq '.elements[0].versionName' app/build/outputs/apk/debug/output-metadata.json)" >> $GITHUB_OUTPUT

      - name: Print Version name
        run: |
          echo "versionCode: ${{steps.get-version-name.outputs.version_code}}"
          echo "versionName: ${{steps.get-version-name.outputs.version_name}}"
        
